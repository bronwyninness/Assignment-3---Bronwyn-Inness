---
title: "Assignment 3 - BI"
format: html
editor: visual
---

## Assignment 3

Loading packages and dataset. Data cleaning.

```{r}
##Loading packages
library(tidyverse)
library(haven)
##Reading in dataset using the 'haven' package
fourlmm <- read_sav("P6003.A4.sav")
##Viewing the data
view(fourlmm)
##Selecting only the columns specified in the assignment based on: "NOTE: Other variables not needed for this assignment, despite being in the dataset."
lmmfinal <- select(fourlmm, id, day, swl, tipm.E, tipm.N)
view(lmmfinal)
class(lmmfinal$id)
##The data is already in the 'long' format, so no need to convert it
##See where exactly NA values are:
sum(is.na(lmmfinal))
class(lmmfinal$id)
##Convert 'id' to a factor
lmmfinal$id <- as.factor(lmmfinal$id)
##Figuring out if it worked
typeof(lmmfinal$id)
str(lmmfinal$id)
typeof(lmmfinal$id)
class(lmmfinal$id)
```

Univariate Distributions

```{r}
library(flexplot)
library(lme4)
library(tidyverse)
##Visualize univariate distributions
flexplot(swl~1, data = lmmfinal)
flexplot(tipm.E~1, data = lmmfinal)
flexplot(tipm.N~1, data = lmmfinal)
##flexplot(day~1, data = lmmfinal)
```

Correlations

```{r}
library(apaTables)
##creating a correlation table with means and sds
correlations <- select(lmmfinal, id, swl, tipm.E, tipm.N)
table1final <- apa.cor.table(correlations, table.number = 1, filename = "table1final.doc")
table1final
```

Step 1: Fit a baseline model

```{r}
library(flexplot)
library(lme4)
library(tidyverse)
##Outcome = swl, predictors = tipm.E, tipm.N, clustering variable = id
baseline <- lmer(swl~1+(1|id), data = lmmfinal)
summary(baseline)
```

Step 2: Calculate the ICC

```{r}
icc(baseline)
```

Step 3: Fit model and test assumptions

```{r}
##Fitting models

E_fixed <- lmer(swl~tipm.E+(1|id), data = lmmfinal)
E_random <- lmer(swl~tipm.E+(tipm.E|id), data = lmmfinal)
model.comparison(E_fixed, E_random)

N_fixed <- lmer(swl~tipm.E+tipm.N+(1|id), data = lmmfinal)
model.comparison(E_random, N_fixed)

N_random <- lmer(swl~tipm.E+tipm.N+(tipm.E+tipm.N|id), data = lmmfinal)
model.comparison(N_fixed, N_random)

full_test <- lmer(swl~tipm.E+tipm.N+(tipm.E+tipm.N|id), data = lmmfinal)

##Assumptions
visualize(full_test, plot = "residuals")
visualize(full_test, plot = "model")
```

Step 4: Model Summary

```{r}
visualize(full_test, plot = "model") 

##library(lmerTest)
##detach("package:lmerTest", unload = TRUE)

##Getting summary and estimates
summary(full_test)
estimates(full_test) ##gets the weird "two datasets" error

variance = 2.025 + 0.01983 +0.03510+0.48874
tipm.Evar <- (0.01983/variance)*100
tipm.Evar
(0.03510/variance)*100
(2.025/variance)*100

#Get traditional R2 estimates
##install.packages("performance")
library(performance)
r2(full_test)
detach("package:performance", unload = TRUE)
```

LMM Table

```{r}
##install.packages("sjPlot")
library(sjPlot)

##Create the table
table2 <- tab_model(full_test,
          show.re.var = TRUE,     # Show random effects
          show.icc = TRUE,        # Intra-class correlation
          show.r2 = TRUE,
          show.se = TRUE, # RÂ² for fixed and mixed
          digits = 3,
          dv.labels = "Satisfaction With Life",
          pred.labels = c("(Intercept)", "Extraversion", "Neuroticism"))
)
  
table2


```
